@page "/game"
@page "/game/{id:int}"
@using Models
@inject NavigationManager NavigationManager


<div class="card text-center">
    <PageTitle>@title</PageTitle>
    <h1> Game Catalog</h1>
    <h3>@title</h3>
</div>

@if (game is null)
{
    <p><em>Loading...</em></p>
}
else
{

    <div class="card text-center">
    <div class="row">
        <div class="col-sm-4">
            <EditForm Model="@game" OnValidSubmit="HandleSubmit">

                @* marginbottom3 *@
                <div class="mb-3">
                    <label for="name" class="form-label"> Name:</label>
                    <InputText id="name" @bind-Value="game.Name" class="form-control"></InputText>
                </div>
                <div class="mb-3">
                    <label for="genre" class="form-label"> Genre:</label>
                    <InputSelect id="genre" @bind-Value="game.Genre" class="form-select">
                        <option value="">Select</option>
                        <option value="Fighting">Fighting</option>
                        <option value="Sports">Sports</option>
                        <option value="Racing">Racing</option>
                        <option value="Roleplaying">Roleplaying</option>
                    </InputSelect>
                </div>
                <div class="mb-3">
                    <label for="price" class="form-label"> Price:</label>
                    <InputNumber id="price" @bind-Value="game.Price" class="form-control"></InputNumber>
                </div>
                <div class="mb-3">
                    <label for="realeseDate" class="form-label"> Release Date:</label>
                    <InputDate id="realeseDate" @bind-Value="game.RealeaseDate" class="form-control"></InputDate>
                </div>
                <div class="mb-3">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
                </div>

                <DataAnnotationsValidator />
                <ValidationSummary />

            </EditForm>
        </div>
    </div>

</div>

}

@code {

    [Parameter]
    public int? Id { get; set; }
    private Game? game;

    @* {
Name = string.Empty,
Genre = string.Empty,
RealeaseDate = DateTime.UtcNow

}; *@

    private string title = "New Game";

    protected override void OnParametersSet()
    {
        try
        {

            if (Id is not null)
            {


                Game foundGame = GameClient.GetGame(Id.Value);
                if (foundGame is null)
                {
                    NavigationManager.NavigateTo("/error");
                }
                else
                {
                    game = new()
                        {
                            Id = foundGame.Id,
                            Name = foundGame.Name,
                            Genre = foundGame.Genre,
                            Price = foundGame.Price,
                            RealeaseDate = foundGame.RealeaseDate
                        };

                    title = $"Edit : {game.Name}";
                };


            }
            else
            {
                game = new()
                    {
                        Name = string.Empty,
                        Genre = string.Empty,
                        RealeaseDate = DateTime.UtcNow

                    };

            }
        }
        catch (Exception)
        {
            NavigationManager.NavigateTo("/error");
        }


    }

    private void HandleSubmit()
    {
        if (game!.Id == 0)
        {
            GameClient.AddGame(game);
        }
        else
        {
            GameClient.UpdateGame(game);
        }

        NavigationManager.NavigateTo("/");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }

}
