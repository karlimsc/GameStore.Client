@page "/"
@using Models
@inject NavigationManager NavigationManager

<PageTitle>Game Catalog</PageTitle>

<h1>Game Catalog</h1>

<div class="row mb-4">
    <div class="col-sm-6">
        <button type="button" class="btn btn-primary" @onclick="CreateGame"> New Game</button>
    </div>
</div>

@if (games is null)
{
    <p><em> Loading </em></p>
}
else
{
    <DeleteGame game="currentGame" OnClose="OnDeleteModalClose"></DeleteGame>

    <table class="table table-row-dashed align-middle gs-0 gy-4 my-0">
    <thead>
        <tr class="fs-7 fw-bold text-gray-500 border-bottom-0">
            <th>Id</th>
            <th>Name</th>
            <th>Genre</th>
            <th>Price</th>
            <th>Release Date</th>
            <th>Actions</th>
        </tr>

    </thead>
    <tbody>
        @foreach (var game in games)
            {
                <tr>
                    <td>@game.Id</td>
                    <td>@game.Name</td>
                    <td>@game.Genre</td>
                    <td>@game.Price</td>
                    <td>@game.RealeaseDate.ToString("MM/dd/yy")</td>
                    <td>
                        <button type="button" class="btn btn-primary" @onclick="(() => EditGame(game.Id))">
                            <i class="oi oi-pencil"></i>
                        </button>

                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal"
                        @onclick="(()=> currentGame = game)">
                            <i class="oi oi-trash"></i>
                        </button>
                    </td>

                </tr>
            }
        </tbody>
    </table>

}

@code {
    private Game[]? games;

    private Game? currentGame;

    protected override void OnInitialized()
    {
        games = GameClient.GetGames();
    }

    private void CreateGame()
    {
        NavigationManager.NavigateTo("/game");
    }

    private void EditGame(int id)
    {

        NavigationManager.NavigateTo($"/game/{id}");

    }

    private void OnDeleteModalClose(bool accepted)
    {
        if (accepted)
        {
            GameClient.DeleteGame(currentGame!.Id);
            games = GameClient.GetGames();
        }
    }

}

@*
<SurveyPrompt Title="How is Blazor working for you?" /> *@
